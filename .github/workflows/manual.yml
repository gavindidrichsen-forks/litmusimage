---
name: Manual
run-name: >
  Build
  ${{ inputs.image && format('image={0}', inputs.image) || '' }}
  ${{ inputs.dockerfile && format('dockerfile={0}', inputs.dockerfile) || '' }}
  ${{ inputs.refresh && format('refresh={0}', inputs.refresh) || '' }}
  ${{ inputs.push && format('push={0}', inputs.push) || ''}}
  ${{ inputs.puppet_litmus && format('puppet_litmus={0}', inputs.puppet_litmus) || '' }}
  ${{ inputs.provision_module && format('provision_module={0}', inputs.provision_module) || '' }}
  ${{ inputs.provision_task && format('provision_task={0}', inputs.provision_task) || '' }}
  ${{ inputs.acceptance_test && format('acceptance={0}', inputs.acceptance_test) || '' }}

on:
  workflow_dispatch:
    inputs:
      image:
        description: image:tag (regex)
        type: string
        default: ".*"
      dockerfile:
        description: or dockerfile (regex)
        type: string
        default: ""
      refresh:
        description: build even if base image unchanged
        type: boolean
        default: false
      push:
        description: push to registry (default branch only)
        type: boolean
        default: true
      provision_task:
        description: provision task
        type: choice
        default: docker
        options:
          - docker
          - docker_exp
      puppet_litmus:
        description: gem options (JSON Hash)
        type: string
        default: ""
      provision_module:
        description: provision module overrides (JSON Hash)
        type: string
        default: ""
      acceptance_test:
        description: repo of module to acceptance test
        type: string

jobs:
  manual:
    uses: ./.github/workflows/template_build_deploy.yml
    secrets: inherit
    with:
      image: ${{ inputs.image }}
      dockerfile: ${{ inputs.dockerfile }}
      refresh: ${{ inputs.refresh == true }}
      push: ${{ inputs.push == true }}
      provision_task: ${{ inputs.provision_task }}
      puppet_litmus: ${{ inputs.puppet_litmus }}
      provision_module: ${{ inputs.provision_module }}
      acceptance_test: ${{ inputs.acceptance_test }}
